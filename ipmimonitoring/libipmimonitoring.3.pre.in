.\"############################################################################
.\"  $Id: libipmimonitoring.3.pre.in,v 1.11.4.3 2008/12/09 18:42:14 chu11 Exp $
.\"############################################################################
.\"  Copyright (C) 2007-2008 Lawrence Livermore National Security, LLC.
.\"  Copyright (C) 2006-2007 The Regents of the University of California.
.\"  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
.\"  Written by Albert Chu <chu11@llnl.gov>
.\"  UCRL-CODE-222073
.\"  
.\"  This file is part of Ipmimonitoring, an IPMI sensor monitoring
.\"  library.  For details, see http://www.llnl.gov/linux/.
.\"  
.\"  Ipmimonitoring is free software; you can redistribute it and/or modify it under
.\"  the terms of the GNU General Public License as published by the Free
.\"  Software Foundation; either version 2 of the License, or (at your option)
.\"  any later version.
.\"  
.\"  Ipmimonitoring is distributed in the hope that it will be useful, but WITHOUT ANY
.\"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
.\"  FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
.\"  details.
.\"  
.\"  You should have received a copy of the GNU General Public License along
.\"  with Ipmimonitoring.  If not, see <http://www.gnu.org/licenses/>.
.\"############################################################################
.TH LIBIPMIMONITORING 3 "December 2006" "LLNL" "LIBIPMIMONITORING"
.SH "NAME"
libipmimonitoring \- a library for IPMI sensor monitoring
.SH "SYNOPSIS"
.B #include <ipmi_monitoring.h>
.sp
.BI "int ipmi_monitoring_init(unsigned int debug_flags, int *errnum);"
.sp
.BI "int ipmi_monitoring_sdr_cache_directory(char *dir, int *errnum);"
.sp
.BI "int ipmi_monitoring_sdr_cache_filenames(char *format, int *errnum);"
.sp
.BI "ipmi_monitoring_ctx_t ipmi_monitoring_ctx_create(void);"
.sp
.BI "void ipmi_monitoring_ctx_destroy(ipmi_monitoring_ctx_t c);"
.sp
.BI "int ipmi_monitoring_ctx_errnum(ipmi_monitoring_ctx_t c);"
.sp
.BI "char *ipmi_monitoring_ctx_strerror(int errnum);"
.sp
.BI "int ipmi_monitoring_sensor_readings_by_record_id(ipmi_monitoring_ctx_t c, char *hostname, struct ipmi_monitoring_ipmi_config *config, unsigned int sensor_reading_flags, unsigned int *record_ids, unsigned int record_ids_len);"
.sp
.BI "int ipmi_monitoring_sensor_readings_by_sensor_group(ipmi_monitoring_ctx_t c, char *hostname, struct ipmi_monitoring_ipmi_config *config, unsigned int sensor_reading_flags, unsigned int *sensor_groups, unsigned int sensor_groups_len);"
.sp
.BI "int ipmi_monitoring_iterator_first(ipmi_monitoring_ctx_t c);"
.sp
.BI "int ipmi_monitoring_iterator_next(ipmi_monitoring_ctx_t c);"
.sp
.BI "int ipmi_monitoring_iterator_record_id(ipmi_monitoring_ctx_t c);"
.sp
.BI "int ipmi_monitoring_iterator_sensor_group(ipmi_monitoring_ctx_t c);"
.sp
.BI "char *ipmi_monitoring_iterator_sensor_name(ipmi_monitoring_ctx_t c);"
.sp
.BI "int ipmi_monitoring_iterator_sensor_state(ipmi_monitoring_ctx_t c);"
.sp
.BI "int ipmi_monitoring_iterator_sensor_units(ipmi_monitoring_ctx_t c);"
.sp
.BI "int ipmi_monitoring_iterator_sensor_reading_type(ipmi_monitoring_ctx_t c);"
.sp
.BI "void *ipmi_monitoring_iterator_sensor_reading(ipmi_monitoring_ctx_t c);"
.sp
.BI "void ipmi_monitoring_iterator_destroy(ipmi_monitoring_ctx_t c);"
.sp
.br
.SH "DESCRIPTION"
The 
.B Libipmimonitoring 
implements a high level sensor monitoring API for IPMI sensors.  The
goal of this library is to abstract away all of the underlying IPMI
details away from the user and map IPMI sensor readings into NOMINAL,
WARNING, or CRITICAL states.  By mapping sensor readings into NOMINAL,
WARNING, or CRITICAL states, it makes monitoring sensors easier across
large numbers of nodes.  An iterator interface is also provided that
allows the user to iterate through sensor values, groups, units, and
states.

.LP
In order to improve efficiency, SDR data will be cached on the host.
By default it is cached in @IPMI_MONITORING_SDR_CACHE_DIR@.
.LP
Interpretation rules have not been written for all sensors
permutations and types.  If sensor interpretation rules are needed,
please contact the developers as listed below.

.SH "STATE CONFIGURATION" 
The interpretation of sensors is configurable via the configuration
file stored at @IPMI_MONITORING_SENSOR_CONFIG_FILE_DEFAULT@.  
See
.B ipmi_monitoring_sensors.conf(5)
for more information on configuring sensor interpretations.

.SH "FILES"
@IPMI_MONITORING_SDR_CACHE_DIR@

@IPMI_MONITORING_SENSOR_CONFIG_FILE_DEFAULT@

#include <@top_srcdir@/common/man/manpage-common-reporting-bugs.man>

.SH COPYRIGHT
Copyright (C) 2007-2008 Lawrence Livermore National Security, LLC.
.br
Copyright (C) 2006-2007 The Regents of the University of California.
#include <@top_srcdir@/common/man/manpage-common-gpl-library-text.man>
.SH "SEE ALSO"
ipmi_monitoring_sensors.conf(5), ipmimonitoring(8)
#include <@top_srcdir@/common/man/manpage-common-homepage.man>
