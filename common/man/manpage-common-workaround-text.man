.LP
Intel SR870BN4: BMCs would not respond to retransmissions of a Get
Session Challenge Request if a previous Get Session Challenge response
was lost.  Resolved by sending retransmitted Get Session Challenge
requests from a different source port.  Automatically handled.
.LP
Tyan S2882 with m3289 BMC: After the IPMI session is brought up,
packet responses return empty session IDs to the client.  This will
likely cause "session timeout" errors to occur.  In order to work
around this issue, the "idzero" workaround must be specified.  The
option will allow empty session IDs to be accepted by the client.
.LP
Dell PowerEdge 2850,SC1425: When Per-Message Authentication is
disabled, packet responses contain non-null authentication data (when
it should in fact be null).  This will likely cause "session timeout"
errors to occur.  In order to work around this issue, the
"unexpectedauth" workaround must be specified.  The option will allow
unexpected non-null authcodes to be checked as though they were
expected. This compliance bug is confirmed to be fixed on newer
firmware.
.LP
IBM eServer 325: The remote BMC will advertise that Per Message
Authentication is disabled, but actually require it for the protocol.
This will likely cause "session timeout" errors to occur.  In order to
work around this issue, the "forcepermsg" workaround must be
specified.  The option will force Per Message Authentication to be
used no matter what is advertised by the remote BMC.
.LP
Supermicro H8QME with SIMSO daughter card: The remote BMC will
advertise that Per Message Authentication is disabled, but actually
require it for the protocol. Automatically handled.
.LP
Asus P5M2/P5MT-R/RS162-E4/RX4: The motherboard does not properly
report username capabilities and/or K_g status.  This will likely
cause "username invalid" or "k_g invalid" errors to occur.  In order
to work around this issue, the "authcap" workaround must be specified.
.LP
Intel SR1520ML/X38ML: The motherboard does not properly report
username capabilities and/or K_g status.  This will likely cause
"username invalid" or "k_g invalid" errors to occur.  In order to work
around this issue, the "authcap" workaround must be specified.
.LP
Sun ILOM 1.0/2.0: The session sequence numbers returned for IPMI 1.5
sessions are the wrong endian on some systems running ILOM 1.0/2.0.
The incorrect endian depends on the service processor endianness.
This will likely cause "session timeout" errors to occur.  In order to
work around this issue, the "endianseq" workaround must be specified.
.LP
Sun Fire 2200/4150/4450 with ELOM: The motherboard does not properly
report username capabilities.  This will likely cause "username
invalid" errors to occur.  In order to work around this issue, the
"authcap" workaround must be specified.
.LP
Intel SE7520AF2 with Intel Server Management Module (Professional
Edition): There are a number of Intel IPMI 2.0 authentication bugs.
These problems may cause "username invalid", "password invalid", or
"k_g invalid" errors to occur.  They can be worked around by
specifying the "intel20" workaround.  The workarounds include padding
of usernames, automatic acceptance of a RAKP 4 response integrity
check when using the integrity algorithm MD5-128, and password
truncation if the authentication algorithm is HMAC-MD5-128.
.LP
Supermicro H8QME with SIMSO daughter card: There are several
Supermicro IPMI 2.0 bugs on early firmware revisions which can be
worked around using the "supermicro20" workaround.  These problems may
cause "password invalid" errors to occur.  These compliance bugs are
confirmed to be fixed on newer firmware.
.LP
Sun Fire 4100/4200/4500 with ILOM: There are several Sun IPMI 2.0
bugs.  These problems may cause "password invalid" or "bmc error"
errors to occur.  They can be worked around by specifying the "sun20"
workaround.  The workarounds include handling invalid lengthed hash
keys, improperly hashed keys, and invalid cipher suite records.
.LP
Inventec 5441, Supermicro X8DTH: The privilege level sent during the
Open Session stage of an IPMI 2.0 connection is used for hashing keys
instead of the privilege level sent during the RAKP1 connection stage.
This may cause "password invalid" or "bad rmcpplus status code" errors
to occur.  It can be worked around by specifying the "opensesspriv"
workaround.
